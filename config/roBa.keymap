#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "hold-preferred";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default {
            bindings = <
&kp Q      &kp W       &kp E         &kp R    &kp T                                             &kp Y     &kp U  &kp I      &kp O    &lt 5 P
&kp A      &kp S       &kp D         &kp F    &kp G     &lt 1 ESC             &kp BACKSPACE     &kp H     &kp J  &kp K      &kp L    &mt RCTRL LS(SEMI)
&kp Z      &kp X       &kp C         &kp V    &kp B     &lt 3 LANGUAGE_2      &lt 2 LANGUAGE_1  &kp N     &kp M  &kp COMMA  &kp DOT  &kp RSHIFT
&kp LCTRL  &kp LSHIFT  &kp LEFT_ALT  &kp TAB  &kp LCMD  &kp ENTER             &kp SPACE         &kp RCMD                             &lt 6 MINUS
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        Symbols {
            bindings = <
&kp TILDE  &kp EXCL  &kp AT       &kp HASH   &trans                      &trans            &kp MINUS          &kp LPAR  &kp RPAR  &kp BSLH
&kp GRAVE  &kp DLLR  &kp PERCENT  &kp CARET  &trans  &trans      &trans  &trans            &kp UNDER          &kp LBRC  &kp RBRC  &kp QUESTION
&trans     &kp AMPS  &kp ASTRK    &trans     &trans  &trans      &trans  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp LBKT  &kp RBKT  &trans
&trans     &trans    &trans       &trans     &trans  &trans      &trans  &trans                                                   &trans
            >;
        };

        Num+Func {
            bindings = <
&trans  &kp KP_N1        &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans                                                &kp F1   &kp F2   &kp F3   &kp F4   &kp F5
&trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans           &kp LC(LA(KP_NUMBER_0))      &trans  &kp F6   &kp F7   &kp F8   &kp F9   &trans
&trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0  &trans                       &trans  &kp ESC  &kp F10  &kp F11  &kp F12  &trans
&trans  &trans           &trans           &trans           &trans           &trans                       &trans  &trans                              &trans
            >;
        };

        Arrow {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans          &trans          &trans        &trans           &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp END
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &kp HOME        &trans          &trans        &trans           &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                                         &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        Mouse {
            bindings = <
&to_layer_0 Q  &to_layer_0 W  &to_layer_0 E  &to_layer_0 R    &to_layer_0 T                                                         &trans            &trans    &trans     &trans    &trans
&to_layer_0 A  &to_layer_0 S  &to_layer_0 D  &to_layer_0 F    &to_layer_0 G     &to_layer_0 ESC             &to_layer_0 BACKSPACE   &trans            &mkp MB1  &mkp MB3   &mkp MB2  &trans
&to_layer_0 Z  &to_layer_0 X  &to_layer_0 C  &to_layer_0 V    &to_layer_0 B     &to_layer_0 LANGUAGE_2      &to_layer_0 LANGUAGE_1  &trans            &mkp MB4  &kp LG(W)  &mkp MB5  &trans
&trans         &trans         &trans         &to_layer_0 TAB  &to_layer_0 LCMD  &to_layer_0 ENTER           &to_layer_0 SPACE       &to_layer_0 RCMD                                 &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        Bluetooth {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR_ALL
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &trans
            >;
        };
    };
};
